var searchIndex = {};
searchIndex["ddc_hi"] = {"doc":"High level DDC/CI monitor controls.","items":[[8,"Ddc","ddc_hi","A high level interface to DDC commands.",null,null],[10,"capabilities_string","","Retrieve the capability string from the device.",0,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"result"}}],[10,"get_vcp_feature","","Gets the current value of an MCCS VCP feature.",0,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["value"],"name":"result"}}],[10,"set_vcp_feature","","Sets a VCP feature to the specified value.",0,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"u16"}],"output":{"name":"result"}}],[10,"save_current_settings","","Instructs the device to save its current settings.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"get_timing_report","","Retrieves a timing report from the device.",0,{"inputs":[{"name":"self"}],"output":{"generics":["timingmessage"],"name":"result"}}],[8,"DdcTable","","Table commands can read and write arbitrary binary data to a VCP feature.",null,null],[10,"table_read","","Read a table value from the device.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["vec"],"name":"result"}}],[10,"table_write","","Write a table value to the device.",1,null],[8,"DdcHost","","A DDC host is able to communicate with a DDC device such as a display.",null,null],[16,"Error","","An error that can occur when communicating with a DDC device.",2,null],[11,"sleep","","Wait for any previous commands to complete.",2,null],[6,"FeatureCode","","VCP feature code",null,null],[3,"VcpValue","","VCP Value",null,null],[12,"ty","","Specifies the type of the value, continuous or non-continuous.",3,null],[12,"mh","","The high byte of the maximum allowed value.",3,null],[12,"ml","","The low byte of the maximum allowed value.",3,null],[12,"sh","","The high byte of the value.",3,null],[12,"sl","","The low byte of the value.",3,null],[4,"VcpValueType","","VCP feature type.",null,null],[13,"SetParameter","","Sending a command of this type changes some aspect of the monitor's operation.",4,null],[13,"Momentary","","Sending a command of this type causes the monitor to initiate a self-timed operation and then revert to its original state.",4,null],[3,"TimingMessage","","",null,null],[12,"timing_status","","",5,null],[12,"horizontal_frequency","","",5,null],[12,"vertical_frequency","","",5,null],[3,"DisplayInfo","","Identifying information about an attached display.",null,null],[12,"backend","","Identifies the backend or driver used to communicate with the display.",6,null],[12,"id","","A unique identifier for the display, format is specific to the backend.",6,null],[12,"manufacturer_id","","A three-character identifier of the manufacturer of the display.",6,null],[12,"model_id","","A number that identifies the product model.",6,null],[12,"version","","The version and revision of the product.",6,null],[12,"serial","","Serial number of the device",6,null],[12,"manufacture_year","","Year the display was manufactured.",6,null],[12,"manufacture_week","","Week the display was manufactured.",6,null],[12,"model_name","","The model name of the display.",6,null],[12,"serial_number","","Human-readable serial number of the device.",6,null],[12,"edid_data","","Raw EDID data provided by the display.",6,null],[12,"mccs_version","","MCCS VCP version code.",6,null],[12,"mccs_database","","MCCS VCP feature information.",6,null],[3,"Display","","An active handle to a connected display.",null,null],[12,"handle","","The inner communication handle used for DDC commands.",7,null],[12,"info","","Information about the connected display.",7,null],[4,"Query","","A query to filter out matching displays.",null,null],[13,"Any","","Matches any display",8,null],[13,"Backend","","Matches a display on the given backend",8,null],[13,"Id","","Matches a display with the specified ID",8,null],[13,"ManufacturerId","","Matches a display with the specified manufacturer",8,null],[13,"ModelName","","Matches a display with the specified model name",8,null],[13,"SerialNumber","","Matches a display with the specified serial number",8,null],[13,"Or","","At least one of the queries must match",8,null],[13,"And","","All of the queries must match",8,null],[4,"Backend","","Identifies the backend driver used to communicate with a display.",null,null],[13,"I2cDevice","","Linux i2c-dev driver",9,null],[13,"WinApi","","Windows Monitor Configuration API",9,null],[13,"Nvapi","","NVIDIA NVAPI driver",9,null],[4,"Handle","","A handle allowing communication with a display",null,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"displayinfo"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create an empty `DisplayInfo`.",6,{"inputs":[{"name":"backend"},{"name":"string"}],"output":{"name":"self"}}],[11,"from_edid","","Creates a new `DisplayInfo` from unparsed EDID data.",6,{"inputs":[{"name":"backend"},{"name":"string"},{"generics":["u8"],"name":"vec"}],"output":{"name":"result"}}],[11,"from_capabilities","","Create a new `DisplayInfo` from parsed capabilities.",6,{"inputs":[{"name":"backend"},{"name":"string"},{"name":"capabilities"}],"output":{"name":"self"}}],[11,"update_from","","Merge in any missing information from another `DisplayInfo`",6,{"inputs":[{"name":"self"},{"name":"displayinfo"}],"output":null}],[11,"update_from_ddc","","Populate information from a DDC connection.",6,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"matches","","Queries whether the provided display info is a match.",8,{"inputs":[{"name":"self"},{"name":"displayinfo"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"backend"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"backend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"backend"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"backend"}],"output":{"name":"ordering"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"values","","Enumerate the possible backends.",9,null],[11,"new","","Create a new display from the specified handle.",7,{"inputs":[{"name":"handle"},{"name":"displayinfo"}],"output":{"name":"self"}}],[11,"enumerate","","Enumerate all detected displays.",7,{"inputs":[],"output":{"name":"vec"}}],[11,"update_capabilities","","Updates the display info with data retrieved from the device's reported capabilities.",7,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"update_from_ddc","","Update some display info.",7,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"capabilities","","Request and parse the display's capabilities string.",10,{"inputs":[{"name":"self"}],"output":{"generics":["capabilities","error"],"name":"result"}}],[11,"sleep","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"capabilities_string","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"result"}}],[11,"get_vcp_feature","","",10,{"inputs":[{"name":"self"},{"name":"featurecode"}],"output":{"generics":["vcpvalue"],"name":"result"}}],[11,"set_vcp_feature","","",10,{"inputs":[{"name":"self"},{"name":"featurecode"},{"name":"u16"}],"output":{"name":"result"}}],[11,"save_current_settings","","",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_timing_report","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["timingmessage"],"name":"result"}}],[11,"table_read","","",10,{"inputs":[{"name":"self"},{"name":"featurecode"}],"output":{"generics":["vec"],"name":"result"}}],[11,"table_write","","",10,null],[11,"decode","","",5,null],[11,"decode","","",3,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"timingmessage"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"value"}}],[11,"hash","","",3,null],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"ordering"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"from_value","","Create a new `Value` from a scalar value.",3,{"inputs":[{"name":"u16"}],"output":{"name":"value"}}],[11,"value","","Combines the value bytes into a single value.",3,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"maximum","","Combines the maximum value bytes into a single value.",3,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"ty","","VCP feature type, if recognized.",3,{"inputs":[{"name":"self"}],"output":{"generics":["valuetype","u8"],"name":"result"}}]],"paths":[[8,"Ddc"],[8,"DdcTable"],[8,"DdcHost"],[3,"VcpValue"],[4,"VcpValueType"],[3,"TimingMessage"],[3,"DisplayInfo"],[3,"Display"],[4,"Query"],[4,"Backend"],[4,"Handle"]]};
initSearch(searchIndex);
